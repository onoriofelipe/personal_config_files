set -g prefix C-a
unbind C-b
set -sg escape-time 1
bind C-a send-prefix
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"
bind | split-window -h
bind - split-window -v

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

bind -r H resize-pane -L
bind -r J resize-pane -D
bind -r K resize-pane -U
bind -r L resize-pane -R

# cycle panes with <prefix> tab
bind -r Tab select-pane -t :.+
bind -r C-Tab select-pane -t :.-

# select pane with <prefix>q number
# this is default behavior; the only change here is the delay going from
# 500ms to 2000ms
set -g display-panes-time 3000

# take advantage of muscle memory for scrolling
setw -g mode-keys vi

# use base index 1 to make pane selecting easier with <prefix>q
# (0 is at the other side of the keyboard when touch typing)
setw -g pane-base-index 1
# don't care about changing indices of windows

# correct colors in some context (not sure when this was added, probably when I
# was using tmux through windows/putty)
set -g default-terminal "screen-256color"

# [x] todo: add maximize with prefix up and minimize with prefix down
# [] todo: make the selection of last panel more robust when intermediate actions are taken,
#    such as tagging the previous window/pane instead of relying on {last} token
# should be implemented as:
# maximize, bound to prefix UP:
    # create temporary window, 
    # tmux new-window -n temporary -d

    # swap current pane with first pane of created window,
    # tmux swap-pane -t temporary.0 -d

    # select temporary window
    # tmux select-window -t temporary
unbind Up
bind Up new-window -n temporary -d \; swap-pane -t temporary.1 -d \; select-window -t temporary

# minimize, bound to prefix DOWN:
    # swap current pane with previous window pane
    # assuming there was no panel change between maximizing and minimizing
    # will obviously fail in some action sequences but will leave
    # as is until a measurement of frequency is obtained
    # tmux swap-pane -t {last} -d

    # select previous window pane
    # tmux select-window -t {last}  

    # kill temporary window
    # this fails if it is ambiguous e.g. there are two windows named
    # temporary
    # tmux kill-window -t temporary
unbind Down
bind Down swap-pane -t {last} -d \; select-window -t {last} \; kill-window -t temporary

# also: check if specifying the pane of a window that contains
# a single panel
# is redundant or if it is necessary for the used commands
# [x] checked man tmux, always unspecified session/window/pane defaults
#     to current

# preparing a default session with the screen like this:
# (4 windows, layout #3, bottom panes with just 4 or so rows each)
#############
#           #
#           #
#           #
#           #
#############
#   #   #   #
#   #   #   #
#############
## new-session
## new-window
## bind \ display 'test'
# use the current window for the following command:
bind \ split-window -h \; split-window -h \; split-window -h \; set-window-option main-pane-height 35 \; select-layout main-horizontal
# list-panes -F "#{pane_width}x#{pane_height}"
## attach
